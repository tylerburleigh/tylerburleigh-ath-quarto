{
  "hash": "a52c3be7f7e359594ec4f1e74d30b34f",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\n# Load reticulate package\nlibrary(reticulate)\nuse_python(\"/home/tyler/anaconda3/bin/python3\")\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\n# Create a dataframe with random data\ndf = pd.DataFrame(np.random.rand(10, 5), columns=[\"A\", \"B\", \"C\", \"D\", \"E\"])\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          A         B         C         D         E\n0  0.610225  0.447295  0.885605  0.204724  0.690943\n1  0.178672  0.454410  0.853636  0.597524  0.312288\n2  0.062658  0.027152  0.485555  0.345585  0.657276\n3  0.546104  0.490170  0.347091  0.777990  0.709621\n4  0.788394  0.391922  0.749630  0.936835  0.362852\n5  0.521724  0.987259  0.808478  0.207505  0.439693\n6  0.881942  0.224313  0.557091  0.029966  0.147365\n7  0.225906  0.646134  0.966587  0.564894  0.650227\n8  0.756470  0.451595  0.224367  0.301855  0.099948\n9  0.863026  0.936277  0.885297  0.115337  0.673213\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate an R dataframe with random data\ndf <- data.frame(matrix(runif(10 * 5), nrow = 10, ncol = 5))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          X1        X2         X3        X4        X5\n1  0.2374576 0.1843774 0.18410435 0.0252358 0.1228432\n2  0.9031967 0.9452391 0.08687513 0.9162863 0.2444546\n3  0.3031635 0.4788460 0.99682728 0.8946282 0.7873613\n4  0.6561823 0.2200306 0.09709519 0.5141434 0.3837988\n5  0.2338557 0.6620090 0.47586417 0.5813820 0.1138283\n6  0.7564030 0.6712069 0.95434755 0.9808161 0.9957650\n7  0.8831021 0.9666421 0.20976970 0.6094109 0.7252166\n8  0.8735873 0.3443146 0.21866909 0.8793032 0.2455360\n9  0.9282959 0.9850559 0.34359125 0.2798002 0.7587341\n10 0.7799728 0.7609344 0.19318775 0.6331484 0.3111612\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Access the Python DataFrame using py$df\npy_df <- py$df\npy_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            A          B         C          D          E\n1  0.61022450 0.44729527 0.8856048 0.20472360 0.69094306\n2  0.17867189 0.45441042 0.8536358 0.59752404 0.31228769\n3  0.06265755 0.02715224 0.4855552 0.34558516 0.65727619\n4  0.54610372 0.49016977 0.3470914 0.77799043 0.70962077\n5  0.78839444 0.39192152 0.7496304 0.93683465 0.36285239\n6  0.52172354 0.98725898 0.8084777 0.20750458 0.43969277\n7  0.88194203 0.22431306 0.5570905 0.02996598 0.14736453\n8  0.22590648 0.64613392 0.9665871 0.56489376 0.65022742\n9  0.75646988 0.45159452 0.2243674 0.30185536 0.09994797\n10 0.86302575 0.93627731 0.8852973 0.11533652 0.67321310\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}